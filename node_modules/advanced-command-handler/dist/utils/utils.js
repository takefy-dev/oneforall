"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.random = exports.isOwner = exports.getKeyByValue = exports.cutIfTooLong = void 0;
const CommandHandler_js_1 = require("../CommandHandler.js");
/**
 * Return the text cut if length is above `maxLength` arg and add `endTextIfTooLong` at the end.
 *
 * @param text - The text to cut if it is too long.
 * @param maxLength - The maximum length required.
 * @param endTextIfTooLong - The end text to add if it is too long.
 * @returns The text, cut if it was too long.
 */
function cutIfTooLong(text, maxLength, endTextIfTooLong = '...') {
    return text.length > maxLength ? `${text.substring(0, maxLength - endTextIfTooLong.length)}${endTextIfTooLong}` : text;
}
exports.cutIfTooLong = cutIfTooLong;
/**
 * Get a key from a value from an Object.
 *
 * @typeParam O - The object type.
 * @param object - The object to get key from.
 * @param value - The value.
 * @returns The key of the object if found, else undefined.
 */
function getKeyByValue(object, value) {
    return Object.keys(object).find(key => object[key] === value);
}
exports.getKeyByValue = getKeyByValue;
/**
 * Test if the ID is in the {@link CommandHandler.owners}.
 *
 * @param id - The ID of the user to test
 * @returns Is the user an owner.
 */
function isOwner(id) {
    return CommandHandler_js_1.CommandHandler.owners?.includes(id);
}
exports.isOwner = isOwner;
/**
 * Returns a random value from an array.
 *
 * @typeParam T - The array type.
 * @param array - The array to get a random value from.
 * @returns A random value from the array.
 */
function random(array) {
    return array[Math.floor(Math.random() * array.length)];
}
exports.random = random;
