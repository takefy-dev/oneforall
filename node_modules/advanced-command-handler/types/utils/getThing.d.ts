import { Emoji, Guild, GuildChannel, GuildMember, Message, Role, User } from 'discord.js';
import { Command } from '../classes/Command';
export declare enum DataType {
    command = "command",
    channel = "channel",
    guild = "emote",
    member = "guild",
    user = "user",
    role = "role",
    emote = "emote",
    message = "message"
}
/**
 * Finds a channel {@link https://discord.js/#/docs/main/stable/class/Channel} from the text, or the message content and returns null if nothing found.
 * It can find it from ID/name/mention.
 *
 * @param dataType - Channel {@link DataType.channel}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Channel or null if not found.
 */
export declare function getThing(dataType: DataType.channel | 'channel', text: string | Message): Promise<GuildChannel | null>;
/**
 * Finds a Command {@link Command} from the text, or the message content and returns null if nothing found.
 * It can find it from the name/alias.
 *
 * @param dataType - Command {@link DataType.command}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Command  or null if not found.
 */
export declare function getThing(dataType: DataType.command | 'command', text: string | Message): Promise<Command | null>;
/**
 * Finds an Emoji {@link https://discord.js.org/#/docs/main/stable/class/Emoji} from the text, or the message content and returns null if nothing found.
 * It can find it from the name/emoji itself/ID.
 *
 * @param dataType - Emote {@link DataType.emote}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Emoji or null if not found.
 */
export declare function getThing(dataType: DataType.emote | 'emote', text: string | Message): Promise<Emoji | null>;
/**
 * Finds a Guild {@link https://discord.js.org/#/docs/main/stable/class/Guild} from the text, or the message content and returns null if nothing found.
 * It can find it from the name/ID.
 *
 * @param dataType - Guild {@link DataType.guild}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Guild or null if not found.
 */
export declare function getThing(dataType: DataType.guild | 'guild', text: string | Message): Promise<Guild | null>;
/**
 * Finds a GuildMember {@link https://discord.js.org/#/docs/main/stable/class/GuildMember} from the text, or the message content and returns null if nothing found.
 * It can find it from the username/ID/mention/nickname.
 *
 * @param dataType - Member {@link DataType.member}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Guild or null if not found.
 */
export declare function getThing(dataType: DataType.member | 'member', text: string | Message): Promise<GuildMember | null>;
/**
 * Finds a Message {@link https://discord.js.org/#/docs/main/stable/class/Message} from the text, or the message content and returns null if nothing found.
 * It can find it from the name/ID/link.
 *
 * @param dataType - Message {@link DataType.message}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Message or null if not found.
 */
export declare function getThing(dataType: DataType.message | 'message', text: string | Message): Promise<Message | null>;
/**
 * Finds a Role {@link https://discord.js.org/#/docs/main/stable/class/Role} from the text, or the message content and returns null if nothing found.
 * It can find it from the name/ID/mention.
 *
 * @param dataType - Role {@link DataType.role}.
 * @param text - A string or a Message to find dataType from.
 * @returns The Role or null if not found.
 */
export declare function getThing(dataType: DataType.role | 'role', text: string | Message): Promise<Role | null>;
/**
 * Finds a User {@link https://discord.js.org/#/docs/main/stable/class/User} from the text, or the message content and returns null if nothing found.<br>
 * It can find it from the username/ID.
 *
 * @param dataType - User {@link DataType.user}.
 * @param text - A string or a Message to find dataType from.
 * @returns The User or null if not found.
 */
export declare function getThing(dataType: DataType.user | 'user', text: string | Message): Promise<User | null>;
