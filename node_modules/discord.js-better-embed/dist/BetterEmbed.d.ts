import { MessageEmbed, MessageEmbedOptions } from 'discord.js';
declare type AnyObject = {
    [k: string]: any;
};
declare type Template = MessageEmbedOptions;
declare type Templates = {
    [k in string | 'basic' | 'color' | 'complete' | 'image']: Template;
};
declare type CheckSizeKey = keyof Template | string;
declare type CheckSizeContent = Template[keyof Template];
export declare const templates: Templates;
export declare const limits: {
    author: {
        name: number;
    };
    title: number;
    description: number;
    footer: {
        text: number;
    };
    fields: {
        size: number;
        name: number;
        value: number;
    };
};
export declare class BetterEmbed extends MessageEmbed {
    static LENGTH_LIMITS: {
        author: {
            name: number;
        };
        title: number;
        description: number;
        footer: {
            text: number;
        };
        fields: {
            size: number;
            name: number;
            value: number;
        };
    };
    static TEMPLATES: Templates;
    constructor(data?: MessageEmbed | Template);
    static fromTemplate(template: keyof Templates | Template, values: AnyObject): BetterEmbed;
    checkSize(field: 'fields'): ({
        index: number;
        limit: number;
    } & ({
        name: boolean;
    } | {
        value: boolean;
    })) | boolean;
    checkSize(field: keyof Template): boolean;
    checkSize(): {
        [k in CheckSizeKey]: {
            content: CheckSizeContent;
            limit: number;
        };
    };
    setImageFromFile(link: string): void;
    setThumbnailFromFile(link: string): void;
    throwIfTooLong(field: keyof Template): void;
    cutIfTooLong(): void;
}
export {};
